--Customer & Order Analytics Project
--In this SQL I'm querying a database with multiple tables in it to quantify statistics about customer and order data. 

--1. How many orders were placed in January
SELECT count(orderID) FROM BIT_DB.JanSales;
--- 9723 orders were placed in January

--2. How many of those orders were for an iPhone
SELECT count(orderID) 
FROM BIT_DB.JanSales
WHERE Product = 'iPhone';
--- 379 of the January orders were for an iPhone

--3. Select the customer account numbers for all the orders that were placed in February.
SELECT acctnum
FROM BIT_DB.customers
INNER JOIN BIT_DB.FebSales
ON customers.order_id = FebSales.orderID; 

--4. Which product was the cheapest one sold in January, and what was the price?
SELECT Product, price
FROM BIT_DB.JanSalesJanSales
ORDER BY price asc
LIMIT 1;
--- AAA Batteries (4-pack) @ $2.99

--5. What is the total revenue for each product sold in January?
--    Revenue can be calculated using the number of products sold and the price of the products
SELECT SUM(quantity)*price as Revenue
,product
FROM BIT_DB.JanSales
GROUP BY product;

--6. Which products were sold in February at 548 Lincoln St, Seattle, WA 98101?
    --How many of each were sold?
    --What was the total revenue?
SELECT sum(Quantity), product, sum(quantity)*price as Revenue
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY product;
--- 2 x AA Batteries (4-pack), total revenue $7.68
    

--7. How many customers ordered more than 2 products at a time in February?
    --What was the average amount spent for those customers?
SELECT * FROM customers;
SELECT COUNT(distinct C.acctnum), ROUND(avg(quantity*price),2)
FROM BIT_DB.FebSales Feb
JOIN BIT_DB.customers C
ON Feb.orderID = C.order_id
WHERE Feb.Quantity > 2
AND length(order_id) = 6
AND order_id <> 'Order ID';
--- 278 customers ordered more than 2 products at a time in February, and they spent on average $13.83

-------------------------------------------

--In the next SQL I was testing advanced data filtering techniques one can use.

SELECT orderdate
FROM BIT_DB.FebSales
WHERE orderdate between '02/13/19 00:00' AND '02/18/19 00:00';
SELECT location
FROM BIT_DB.FebSales 
WHERE orderdate = '02/18/19 01:35';
SELECT sum(quantity)
FROM BIT_DB.FebSales 
WHERE orderdate like '02/18/19%';
SELECT orderdate from BIT_DB.FebSales;
SELECT distinct Product
FROM BIT_DB.FebSales
WHERE Product like '%Batteries%';
SELECT distinct Product, Price
FROM BIT_DB.FebSales 
WHERE Price like '%.99';

--8. List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT Product, sum(Quantity) 
FROM BIT_DB.FebSales
WHERE location LIKE '%Los Angeles%'
GROUP BY Product;

-------------------------------------------

--In the next SQL I did some more advanced customer and order analytics

--9. Which locations in New York received at least 3 orders in January, and how many orders did they each receive? (Hint: use HAVING)
SELECT * FROM BIT_DB.JanSales;
SELECT distinct location, count(orderID)
FROM BIT_DB.JanSales
WHERE location LIKE '%NY%'
GROUP BY location
HAVING COUNT(orderID) > 2;

--10. How many of each type of headphone were sold in February?
SELECT * FROM BIT_DB.FebSales;
SELECT sum(Quantity) as Quantity, Product
FROM BIT_DB.FebSales
WHERE Product LIKE '%Headphones%'
GROUP BY Product;
--- 1,013 Apple Airpods, 844 Bose Sound Sport, and 1,282 Wired Headphones

--11. What was the average amount spent per account in February?
SELECT ROUND(sum(price*quantity)/count(C.acctnum), 2)
FROM BIT_DB.FebSales Feb
JOIN BIT_DB.customers C
ON Feb.orderID = C.order_id
WHERE length(orderid) = 6 
AND orderid <> 'Order ID';
--- Averaged $190 per account
 
--12. What was the average quantity of products purchased per account in February?
SELECT sum(quantity)/count(C.acctnum)
FROM BIT_DB.FebSales Feb
JOIN BIT_DB.customers C
ON Feb.orderID = C.order_id
WHERE length(orderid) = 6 
AND orderid <> 'Order ID';
--- Averaged 1 product purchased per account

--13. Which product brought in the most revenue in January and how much revenue did it bring in total?
SELECT Product, sum(quantity*price)
FROM BIT_DB.JanSales
GROUP BY Product
ORDER BY sum(quantity*price) desc
LIMIT 1;
--- The Macbook Pro Laptop brought in the most revenue in January at $399,500
